{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;\red33\green255\blue6;\red0\green0\blue255;\red0\green0\blue0;
\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c97680\c0;\cssrgb\c1680\c19835\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20780\viewh13740\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs24 \cf0 Notes Java
\f1\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb2 			Mots-cl\'e9s java
\f0\b \cb1 \
\
\
Convention de nommage \

\f1\b0 	\ul Variable/attribut:\ulnone  tout en minuscule. Ex. String nom;\
	\ul Constante
\f0\b \ulnone  : 
\f1\b0 Tout en majuscule. Ex. const NOM;\
	\ul Methode
\f0\b \ulnone  :
\f1\b0  plut\'f4t un verbe, tout en minuscule avec parenth\'e8se \'e0 la fin, et \'e9ventuellement des param\'e8tres avec des accolades pour l\'92impl\'e9menter. Ex.: fly()\{\}\
	\ul classe
\f0\b \ulnone  :
\f1\b0  plut\'f4t un substantif, 1e lettre en majuscule, et on enregistre le fichier avec le m\'eame nom avec l\'92extension \'ab\'a0.java\'a0\'bb. Ex: Game.java\

\f0\b 	
\f1\b0 \ul Interface 
\f0\b \ulnone : 
\f1\b0 1e lettre en majuscule, et terminaison en \'ab\'a0able\'a0\'bb, et on enregistre le fichier avec le m\'eame nom avec l\'92extension \'ab\'a0.java\'a0\'bb. Ex.: Flyable.java\

\f0\b \
\
Manipulation de texte (chaines de caract\'e8res)
\f1\b0  \
	
\f0\b \cf3 -String() -> cr\'e9e des chaines immuables 
\f1\b0 \cf0 \
	- .concat(\'ab\'a0string\'a0\'bb) -> concat\'e9nation\
	-.replace(\'ab\'a0a\'a0\'bb, \'ab\'a0a\'92\'a0\'bb) -> remplacement de caract\'e8res \
	-.trim(index,no) -> enl\'e8ve les espaces devant la chaine \
	- .substring() -> extraction de caract\'e8res\
	-.length() \
	- .toUpperCase()-> met tt en majuscule\
	-.toLowerCase() -> met tt en minuscule\
	-.charAt(index) -> renvoie le caract\'e8re \'e0 l\'92index renseign\'e9\
	-.equals(a) -> compare 2 chaines\
	-.compareTo(a)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf3 	
\f0\b -StringTokenizer(a,\'a0\'ab\'a0/\'ab, true\'a0\'a0) -> divise une chaine =>java.util.StringTokenizer
\f1\b0 \cf0 \
	-.hasMoreTokens() -> pour contr\'f4ler les bouts de chaine r\'e9sultants de la division\
	-.nextToken() -> manipulation/r\'e9cup\'e9ration/acc\'e8s au prochain bout de chaine divis\'e9\
\
\cf3 	
\f0\b -StringBuffer() -> multithreads (plus lent) : cr\'e9e des chaines muables
\f1\b0 \cf0 \
	-.append(\'ab\'a0string\'a0\'bb) -> ajoute du texte \'e0 la fin d\'92une chaine existante dans une variable\
	-.insert(index,\'ab\'a0string\'a0\'bb) ->insert une chaine \'e0 l\'92index indiqu\'e9 dans la chaine existante\
	-.capacity() -> donne le nombre de caract\'e8res maximal que peut contenir la variable\
	-.length() -> donne la longueur de la chaine contenu dans la variable\
	- .replace(index, No, \'ab\'a0string\'a0\'bb) ->\
\
\cf3 	
\f0\b -StringBuilder() -> monothread (plus rapide) : cr\'e9e des chaines muables \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0 \cf0 \

\f0\b \
Lecture de donn\'e9es
\f1\b0 \

\f0\b \cf3 - BufferedReader() ->  monothread (plus lent) : lit les donn\'e9es entr\'e9es par l\'92utilisateur comme un String => java.io.BufferedReader\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0 \cf4 	- .read() -> lit le premier caract\'e8re et transmet son code ASCII => attend un Char\
	- .readLine()-> lit une chaine de caract\'e8res et le transmet=> attend un String\
	- .skip() -> saute des caract\'e8res => attend un Long\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b \cf3 \
- scanner() -> multithreads (plus rapide) : lit et analyse (parsing) les donn\'e9es de l\'92utilisateur pour d\'e9terminer si son type correspond \'e0 celui attendu =>java.util.Scanner\
	
\f1\b0 \cf4 - .nextChar()\
	- .nextLine()\
	- .nextInt()\
	- .nextFloat()\
	- .nextBoolean()\

\f0\b \cf3 \
- InputStreamReader() -> m\'e9taclasse de lecture de flux d\'92entr\'e9es (System.In) => java.io.InputStreamReader\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 \
Package 
\f1\b0 (=organisation des dossiers du programme : la classe racine importe les classes auxquelles elle fait appel)\
\
	\cb2 package\cb1  
\f2\i nonPackage ;
\f1\i0  		\'97> d\'e9clare la classe comme faisant parti du package/cheminDeDossiers indiqu\'e9 \
\
	\cb2 import\cb1  
\f2\i package.classe 
\f1\i0 ;		
\f2\i \'97> importe la classe indiqu\'e9e du package/
\f1\i0 cheminDeDossiers
\f2\i  (\ul \'ab\'a0import\'a0\'bb se place apr\'e8s \'ab\'a0package\'a0\'bb, sinon on obtient de nombreuses erreurs !)
\f1\i0 \ulnone \
	\cb2 import\cb1  
\f2\i package.* ; 			\'97> importe toutes les classes du package/
\f1\i0 cheminDeDossiers\
\
		Exemples: Projet -> Langue -> packages : modules, fonctionnalit\'e9s -> classes ?\
		MonProjet (main.java et main.class) ->  Suffixe -> domaine-> packages: fonctionnalit\'e9s -> classes \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\i \cf4 \ul \ulc4 			
\f1\i0 \ulnone ==>  \cb5 package\cb1  
\f2\i fr.dmlp.mypackage;
\f1\i0 \
		MonProjet (main.java et main.class) ->  Suffixe ->modules -> packages-> classes \
			==> \cb5 package\cb1  
\f2\i fr.dmlp.mypackage.class;
\f1\i0  \ul ou bien\ulnone  package 
\f2\i fr.dmlp.mypackage.*;\

\f1\i0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b \cf4 \
\
Exceptions - D\'e9bogage
\f1\b0 \
	- try\{\
		\}\
	catch(typeException e)\{\
						\}\
	finally\{\
		\}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf3 	- InputMismatchException\
	- NoSuchElementException\
	- RuntimeException\
	- IOException\
	- IndexOutOfBoundsException\
	- \'85\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 \
	- e.getMessage();\
	- e.printStackTrace();\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b \cf4 H\'e9ritage
\f1\b0 \
	- instanceOf(); 				\'97> teste si une variable \'ab\'a0x\'a0\'bb instancie une classe \'ab\'a0y\'a0\'bb\
	- \cb2 extends\cb1  					\'97> une classe fille concr\'e8te (non abstract) \'e9tend une et une seule classe m\'e8re (et toutes ses m\'e9thodes obligatoirement)\
	- \cb2 super()\cb1 ; 					\'97> permet d\'92appeler et de r\'e9utiliser le constructeur de la classe m\'e8re et de l\'92\'e9tendre.\
	- super.method();			\'97> permet d\'92appeler et de r\'e9utiliser une m\'e9thode de la classe m\'e8re et de l\'92\'e9tendre.\
	- \cb2 protected\cb1  				\'97> d\'e9clare qu\'92une variable peut-\'eatre utilis\'e9 par les classes filles\
	- \cb2 final\cb1  					\'97> d\'e9clare qu\'92une classe, une m\'e9thode, un attribut ou une variable n\'92est pas \'e9tendable/red\'e9finissable/modifiable dans les classes/m\'e9thodes filles\
	- if < \'85 > \{\
		throw new Exception (\'ab\'a0String\'a0\'bb);\
			\}\
\

\f0\b \
Classe et classe abstraite 
\f1\b0 (private par d\'e9faut)
\f0\b \
	
\f1\b0 \cf3 - classe concr\'e8te\cf4 \
		\cb2 public\cb1  \cb2 class\cb1  
\f2\i NomClass 
\f1\i0 \{					\'97> Une classe concr\'e8te d\'e9finie par le mot cl\'e9 \'ab\'a0class\'a0\'bb, \'ab\'a0public\'a0\'bb ou \'ab\'a0private\'a0\'bb permet de construire des objets\
					public 
\f2\i NomConstructeur
\f1\i0  () \{	\'97> Le constructeur de l\'92objet d\'e9finit l\'92objet\
					\}\
					public 
\f2\i NomMethode
\f1\i0 ()\{		\'97> Les m\'e9thodes de la classe d\'e9finit les actions que peut op\'e9rer l\'92objet\
					\}\
					public static 
\f2\i NomMethode
\f1\i0 () \{	\'97> permet d\'92appeler la classe sans cr\'e9er d\'92instance\
					\}\
					private 
\f2\i NomAttribut
\f1\i0 ;			\'97> L\'92attribut est disponible seulement  dans sa classe\
					protected 
\f2\i NomAttribut
\f1\i0 ;		\'97> L\'92attribut est disponible pour les classes filles\
					public 
\f2\i NomAttribut
\f1\i0 ;			\'97> L\'92attribut est atteignable de partout\
					\}
\f0\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0 \cf4 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf3 	- h\'e9ritage\cf4 \
\cf3 		\cf4 public class 
\f2\i NomClass
\f1\i0  extends 
\f2\i NomClass\'92 
\f1\i0 \{		\'97> \'ab\'a0extends\'a0\'bb permet \'e0 une classe enfant d\'92h\'e9riter d\'92une et d\'92une seule classe m\'e8re. Si la classe enfant est concr\'e8te, il est de d\'e9finir  toutes ses m\'e9thodes abstraites et \ul celles de ses parents\ulnone .\
										\}\
\
	\cf3 - Interface \cf4 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 \cb5 		public class 
\f2\i NomClass 
\f1\i0 implements
\f2\i  NomInterface 
\f1\i0 \cb1 \{	\'97> \'ab\'a0implements\'a0\'bb permet \'e0 une classe d\'92impl\'e9menter une interface\
											\}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf3 \cb5 	- classe abstraite\cf4 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 \cb5 		public \cb2 abstract\cb5  class 
\f2\i NomClass 
\f1\i0 \cb1 \{ 			\'97>  Classe abstraite d\'e9finie par le mot cl\'e9 \'ab\'a0abstract\'a0\'bb et qui permet de hi\'e9rarchiser les classes, ne peut-\'eatre instanci\'e9.\
					public 
\f2\i nomConstructeur
\f1\i0 ()\{		\'97> constructeur qui est \'e9tendable/red\'e9finissable dans les classes filles.\
										\}\
\
					abstract 
\f2\i NomMethode 
\f1\i0 () ;		\'97> Est d\'e9clar\'e9 mais jamais d\'e9fini dans la classe m\'e8re, mais doit \'eatre obligatoirement d\'e9fini dans les classes non abstraites filles.\
					\
					public 
\f2\i NomMethode
\f1\i0 () \{		\'97> m\'e9thode non abstraite qui se d\'e9finit dans la classe m\'e8re et est \'e9tendable/red\'e9finissable dans les classes filles..\
									\}\
\
					private 
\f2\i NomAttribut
\f1\i0 ;\
					protected 
\f2\i NomAttribut
\f1\i0 ;\
					public 
\f2\i NomAttribut
\f1\i0 ;\
						\}\
					\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b \cf4 Interface
\f1\b0 \
	 - \cb2 interface\cb5  
\f2\i NomInterface
\f1\i0  \cb1 \{  					\'97> N\'92a pas de constructeur et ne peut-\'eatre instanci\'e9.\
						void 
\f2\i nomMethod
\f1\i0 (); 		\'97> m\'e9thode abstraite\
						\}\
	\
	- extends \'97> \'e9tend une autre interface\
	- \cb2 implements\cb1  								\'97> une classe impl\'e9mente une (ou plusieurs) interface(s) (et toutes ses m\'e9thodes obligatoirement))\
	- @FonctionnalInterface						\'97> interface ne comprenant qu\'921 m\'e9thode (abstraite)\
	- default void 
\f2\i NomMethodeParDefaut				\'97> permet d\'92avoir une m\'e9thode par d\'e9faut d\'e9finissable dans l\'92interface et red\'e9finissable au besoin dans la classe qui l\'92impl\'e9mente
\f1\i0 \
	- public final 
\f2\i NomAttribut
\f1\i0 ()\{					\'97> les variables ne peuvent  \'eatre que \'ab\'a0final\'a0\'bb\
	- public static 
\f2\i NomMethode
\f1\i0 ()\{					\'97> permet d\'92appeler l\'92interface (sans instance)??\
						\}\
\

\f0\b Plymorphisme
\f1\b0 \
	\
\
\
\
\
\
\
\
\
\
}